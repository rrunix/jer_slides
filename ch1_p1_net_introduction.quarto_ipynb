{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"Introducción a las Redes de Ordenadores\"\n",
        "subtitle: \"Fundamentos de Internet y Arquitecturas de Red\"\n",
        "author: \"Rubén Rodríguez Fernández (&#64;rrunix)\"\n",
        "date: \"16/09/2025\"\n",
        "corresponding: true\n",
        "css: ojs_interactive.css\n",
        "aliases:\n",
        "  - ch1_p1.html\n",
        "\n",
        "mermaid:\n",
        "  theme: default\n",
        "  themeVariables:\n",
        "    background: \"#ffffff\"\n",
        "---\n",
        "\n",
        "# Introducción\n",
        "\n",
        "## ¿Qué es Internet?\n",
        "\n",
        "::: {.columns}\n",
        "::: {.column width=\"50%\"}\n",
        "**Etimología**: \"Interconnected Networks\"\n",
        "\n",
        "- Red global de redes interconectadas\n",
        "- Sistema descentralizado\n",
        "- Múltiples capas jerárquicas\n",
        ":::\n",
        "\n",
        "::: {.column width=\"50%\"}\n",
        "**Características principales**:\n",
        "\n",
        "- Arquitectura distribuida\n",
        "- Resiliencia a fallos\n",
        "- Escalabilidad natural\n",
        "- Sin control centralizado\n",
        ":::\n",
        ":::\n",
        "\n",
        "```{mermaid}\n",
        "graph LR\n",
        "    G1[\"🌐 Google A\"]\n",
        "    F1[\"📘 Facebook\"]\n",
        "    G2[\"🌐 Google B\"]\n",
        "    A1[\"🛒 Amazon\"]\n",
        "    N1[\"📺 Netflix\"]\n",
        "    U1[\"👤 Usuario\"]\n",
        "    \n",
        "    %% Conexiones normales\n",
        "    G1 ---|\"✅\"| F1\n",
        "    F1 ---|\"✅\"| G2\n",
        "    G1 ---|\"✅\"| A1\n",
        "    A1 ---|\"✅\"| N1\n",
        "    N1 ---|\"✅\"| G2\n",
        "    U1 ---|\"✅\"| G1\n",
        "    \n",
        "    %% Conexiones rotas\n",
        "    G2 -.-|\"❌ ROTO\"| U1\n",
        "    A1 -.-|\"❌ ROTO\"| F1\n",
        "    \n",
        "    %% Rutas alternativas\n",
        "    U1 ---|\"🔄 Alt\"| F1\n",
        "    F1 ---|\"🔄 Alt\"| N1\n",
        "    N1 ---|\"🔄 Alt\"| G2\n",
        "    \n",
        "    classDef server fill:#4ecdc4,stroke:#00b894,stroke-width:2px,color:#fff\n",
        "    classDef user fill:#fd79a8,stroke:#e84393,stroke-width:2px,color:#fff\n",
        "    \n",
        "    class G1,F1,G2,A1,N1 server\n",
        "    class U1 user\n",
        "```\n",
        "\n",
        "## Jerarquía de Redes\n",
        "\n",
        "```{mermaid}\n",
        "%%| fig-width: 5s\n",
        "graph LR\n",
        "    PAN[\"📱 PAN (Personal Area Network)<br>Smartphone ↔ Smartwatch\"]\n",
        "    LAN[\"🏠 LAN (Local Area Network)<br>Home/Office/Building Network\"]\n",
        "    WLAN[\"📡 WLAN (Wireless LAN)<br>Wi-Fi Implementation of LAN\"]\n",
        "    CAN[\"🏫 CAN (Campus Area Network)<br>Multiple LANs in Campus\"]\n",
        "    MAN_ISP[\"🏙️ MAN (Metropolitan Area Network)<br>ISP Network\"]\n",
        "    MAN_MOBILE[\"📶 MAN (Metropolitan Area Network)<br>5G/4G Mobile Network\"]\n",
        "    WAN[\"🌍 WAN (Wide Area Network)<br>Between Cities or Countries\"]\n",
        "    INTERNET[\"🌐 Internet<br>Global Interconnected WANs\"]\n",
        "    VPN[\"🔐 VPN (Virtual Private Network)<br>Secure Tunnel over Internet\"]\n",
        "    \n",
        "    %% Traditional wired path\n",
        "    PAN --> LAN\n",
        "    WLAN -.-> LAN\n",
        "    LAN -->|Multiple LANs| CAN\n",
        "    CAN --> MAN_ISP\n",
        "    LAN -->|Multiple LANs| MAN_ISP\n",
        "    \n",
        "    %% Mobile path\n",
        "    PAN --> MAN_MOBILE\n",
        "    \n",
        "    %% Both MANs connect to WAN\n",
        "    MAN_ISP -->|Multiple MANs| WAN\n",
        "    MAN_MOBILE -->|Multiple MANs| WAN\n",
        "    WAN -->|Multiple WANs| INTERNET\n",
        "    VPN --> INTERNET\n",
        "    \n",
        "    style WLAN fill:#e1f5fe\n",
        "    style VPN fill:#f3e5f5\n",
        "    style MAN_MOBILE fill:#fff3e0\n",
        "```\n",
        "\n",
        "- **PAN**: Red personal entre dispositivos cercanos.\n",
        "- **LAN**: Red local de casa/oficina/edificio.\n",
        "- **WLAN**: LAN inalámbrica (Wi-Fi).\n",
        "- **CAN**: Red de campus - conecta múltiples LANs.\n",
        "- **MAN**: Red metropolitana - cubre una ciudad, incluye redes de ISP y móviles (4G/5G)\n",
        "- **WAN**: Red de área amplia - conecta ciudades o países.\n",
        "- **Internet**: Red global - interconexión de todas las WANs del mundo\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "::: {.notes}\n",
        "- PAN: Personal (smartwatch, móvil)\n",
        "- LAN: Local (hogar, oficina)\n",
        "- MAN: Metropolitana (ciudad)\n",
        "- WAN: Área amplia (países)\n",
        "- Internet: Red global\n",
        ":::\n",
        "\n",
        "\n",
        "\n",
        "## Ejemplo: Mensaje Madrid → Tokio\n",
        "\n",
        "Smartphone María (WiFI) en Madrid -> Takeshi LAN en la Universidad de Tokyo\n",
        "\n",
        "::: {.incremental}\n",
        "1. **Origen LAN Madrid**: Smartphone → Router WiFi\n",
        "2. **Router local → MAN**: ISP local → MAN Madrid\n",
        "3. **MAN → WAN nacional**: MAN Madrid → WAN España\n",
        "4. **WAN → Internet global**: España → Backbone internacional\n",
        "5. **Llegada a Japón**: WAN Japón → MAN Tokio\n",
        "6. **MAN → CAN**: MAN Tokio → Universidad\n",
        "7. **CAN → LAN**: Campus → LAN específica\n",
        "8. **Destino final**: LAN → Dispositivo de Takeshi\n",
        ":::\n",
        "\n",
        "## Un caso un poco más real\n",
        "\n",
        "- Probad a ejecutar en vuestras terminales `traceroute www.google.es` (`tracert www.google.es` en Windows)\n",
        "- ¿Qué información estáis obteniendo?\n",
        "- Comparadla con vuestros compañer\\@s. ¿Es la misma?\n",
        "\n",
        "\n",
        "## Internet simplificado\n",
        "::: {style=\"width: 35vw; height: auto; overflow: visible; text-align: center;\"}\n",
        "![](resources/small_network.png){style=\"display: block; margin: 0 auto;\"}\n",
        ":::\n",
        "\n",
        "## Componentes Clave\n",
        "\n",
        "::: {.columns}\n",
        "::: {.column width=\"50%\"}\n",
        "### Router\n",
        "\n",
        "- Conecta **diferentes redes**\n",
        "- Usa direcciones **IP**\n",
        "- Enrutamiento \"hop by hop\"\n",
        "- Opera entre redes distantes\n",
        ":::\n",
        "\n",
        "::: {.column width=\"50%\"}\n",
        "### Switch\n",
        "\n",
        "- Conecta dispositivos en **misma red**\n",
        "- Usa direcciones **MAC**\n",
        "- Entrega local inteligente\n",
        "- Opera dentro de la LAN\n",
        ":::\n",
        ":::\n",
        "\n",
        "## En nuestras casas\n",
        "\n",
        "Entonces... ¿Esto que es?\n",
        "\n",
        "![](resources/router_switch.png)\n",
        "\n",
        "## Identificadores en Red\n",
        "\n",
        "::: {.columns}\n",
        "::: {.column width=\"33%\"}\n",
        "### Dirección IP\n",
        "\n",
        "- \"Dirección postal\"\n",
        "- Localiza en la red\n",
        "- Ejemplo: 192.168.1.100\n",
        "- Puede cambiar\n",
        ":::\n",
        "\n",
        "::: {.column width=\"33%\"}\n",
        "### Dirección MAC\n",
        "\n",
        "- \"DNI del dispositivo\"\n",
        "- Única y permanente\n",
        "- Asignada por fabricante\n",
        "- No cambia nunca\n",
        ":::\n",
        "\n",
        "::: {.column width=\"33%\"}\n",
        "### Protocolo ARP\n",
        "\n",
        "- \"Directorio telefónico\"\n",
        "- Traduce IP ↔ MAC\n",
        "- Permite entrega final\n",
        "- Opera localmente\n",
        ":::\n",
        ":::\n",
        "\n",
        "::: {.callout-note}\n",
        "# Ejercicio\n",
        "Prueba a ejecutar `ifconfig` en tu terminal MacOS/Linux o `ipconfig` en Windows. ¿Qué ves?.\n",
        ":::\n",
        "\n",
        "\n",
        "## Protocolos de Red\n",
        "\n",
        "> **Protocolo**: Serie de pasos bien definidos que especifican cómo intercambiar información entre dispositivos\n",
        "\n",
        "### Analogía del tráfico urbano\n",
        "- **Sin protocolos**: Caos total, pérdida de información\n",
        "- **Con protocolos**: Flujo ordenado, comunicación efectiva\n",
        "\n",
        "\n",
        "# Historia de Internet\n",
        "\n",
        "## Linea temporal de Internet.\n",
        "```{mermaid}\n",
        "%%| fig-width: 6s\n",
        "timeline\n",
        "    title Evolución de Internet: De ARPANET a la Era Digital\n",
        "    \n",
        "    section Era ARPANET (1969-1983)\n",
        "        1969 : Nace ARPANET\n",
        "             : 4 nodos iniciales (UCLA, Stanford, UC Santa Bárbara, Utah)\n",
        "             : Implementación de conmutación de paquetes\n",
        "        \n",
        "        1973 : Primera conexión internacional\n",
        "        \n",
        "        1983 : Adopción oficial de TCP/IP\n",
        "             : División de ARPANET (creación de MILNET)\n",
        "             : Nace el término \"Internet\"\n",
        "\n",
        "    section Nacimiento de la Web (1989-1995)\n",
        "        1989-1990 : Tim Berners-Lee inventa la World Wide Web\n",
        "                  : Desarrollo de HTTP, HTML y URLs\n",
        "        \n",
        "        1991 : Primer sitio web público\n",
        "\n",
        "    section Era Comercial (1995-2000)\n",
        "        1995 : Eliminación de restricciones comerciales\n",
        "             : Primeros ISPs comerciales (AOL)\n",
        "             : Aparecen Amazon y eBay\n",
        "        \n",
        "        1998 : Fundación de Google\n",
        "        \n",
        "        2000-2001 : Explosión de la burbuja punto-com\n",
        "\n",
        "    section Web 2.0 y Redes Sociales (2003-2010)\n",
        "        2003-2006 : Redes sociales\n",
        "        2007 : Lanzamiento del iPhone\n",
        "\n",
        "    section Era Moderna (2010-2025)\n",
        "        2010s : Computación en la nube, Internet de las cosas\n",
        "        \n",
        "        2020s : Inteligencia Artificial\n",
        "              : Tecnología 5G\n",
        "\n",
        "```\n",
        "\n",
        "- ARPANET se creo con fines militares\n",
        "- Se creo y publicó el primer sitio web (CERN)\n",
        "- Burbuja punto com\n",
        "- Creación de las Redes sociales.\n",
        "- Inteligencia Artificial Generativa.\n",
        "\n",
        "\n",
        "## Crecimiento Exponencial\n",
        "\n",
        "De ~4 dispositivos (1969) a >100.000 millones (2025) en 50 años."
      ],
      "id": "b0d73a1e"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "decades = ['1970s', '1980s', '1990s', '2000s', '2010s', '2020s']\n",
        "values = [0.6, 2.3, 4.5, 9.0, 10.1, 11.7]\n",
        "\n",
        "plt.figure(figsize=(10, 6))\n",
        "plt.bar(decades, values, color='#4CAF50')\n",
        "plt.title('Dispositivos Conectados (Log₁₀)', fontsize=16)\n",
        "plt.ylabel('Log₁₀ (dispositivos)')\n",
        "plt.ylim(0, 12)\n",
        "plt.show()"
      ],
      "id": "9b2fbcbd",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "# Infraestructura de Red\n",
        "\n",
        "\n",
        "\n",
        "## Sistemas Terminales (End Systems)\n",
        "\n",
        "> Hosts (End systems): Son los dispositivos que **usan** Internet como PCs, smartphones, IoT, servidores. Ejecutan aplicaciones de red.\n",
        "\n",
        "\n",
        "\n",
        "::: {.columns}\n",
        "::: {.column width=\"50%\"}\n",
        "### Clasificación\n",
        "\n",
        "- **Clientes**: Solicitan servicios\n",
        "- **Servidores**: Proporcionan servicios\n",
        "- Roles dinámicos (P2P)\n",
        ":::\n",
        "\n",
        "::: {.column width=\"50%\"}\n",
        "\n",
        "::: {.rows}\n",
        "::: {.rows height=\"50%\"}\n",
        "```{mermaid}\n",
        "---\n",
        "title: Cliente - Servidor \n",
        "---\n",
        "graph TD\n",
        "    S[\"🖥️ Servidor<br/>Centralizado\"]\n",
        "    C1[\"💻 Cliente 1\"]\n",
        "    C2[\"📱 Cliente 2\"]\n",
        "    C3[\"🖥️ Cliente 3\"]\n",
        "    \n",
        "    C1 <--> S\n",
        "    C2 <--> S\n",
        "    C3 <--> S\n",
        "    \n",
        "    classDef server fill:#ff6b6b,stroke:#d63031,stroke-width:3px,color:#fff\n",
        "    classDef client fill:#74b9ff,stroke:#0984e3,stroke-width:2px,color:#fff\n",
        "    \n",
        "    class S server\n",
        "    class C1,C2,C3 client\n",
        "```\n",
        ":::\n",
        "::: {.rows height=\"50%\"}\n",
        "```{mermaid}\n",
        "---\n",
        "title: Peer to peer \n",
        "---\n",
        "graph LR\n",
        "    P1[\"💻 Peer 1\"]\n",
        "    P2[\"📱 Peer 2\"]\n",
        "    P3[\"🖥️ Peer 3\"]\n",
        "    P4[\"💻 Peer 4\"]\n",
        "    \n",
        "    P1 <--> P2\n",
        "    P1 <--> P3\n",
        "    P2 <--> P3\n",
        "    P2 <--> P4\n",
        "    P3 <--> P4\n",
        "    \n",
        "    classDef peer fill:#00b894,stroke:#00a085,stroke-width:2px,color:#fff\n",
        "    \n",
        "    class P1,P2,P3,P4 peer\n",
        "```\n",
        ":::\n",
        ":::\n",
        ":::\n",
        ":::\n",
        "\n",
        "\n",
        "\n",
        "## Redes de Acceso\n",
        "\n",
        "> Redes de acceso: Es la red en la que se conectan los host con el router de borde.\n",
        "\n",
        "::: {.columns}\n",
        "::: {.column width=\"50%\"}\n",
        "**Tecnologías host → router**\n",
        "\n",
        "- WiFi 6: 200-400 Mb/s\n",
        "- Ethernet: 10 Gb/s\n",
        "- 4G LTE: 50/15 Mb/s\n",
        "- 5G: 300/50 Mb/s\n",
        ":::\n",
        "\n",
        "::: {.column width=\"50%\"}\n",
        "**Características**\n",
        "\n",
        "- Alcance limitado\n",
        "- Velocidades variables\n",
        "- Medios compartidos vs dedicados\n",
        ":::\n",
        ":::\n",
        "\n",
        "\n",
        "\n",
        "## Tecnologías WAN\n",
        "\n",
        "> Router de borde: Router que conecta la red de acceso con el núcleo de la red.\n",
        "\n",
        "### Tecnologías comunes:\n",
        "\n",
        "| Tecnología | Velocidad típica | Estado 2025 |\n",
        "|------------|------------------|-------------|\n",
        "| DSL/VDSL | 50/15 Mb/s | En declive |\n",
        "| Cable HFC | 300/30 Mb/s | Estable |\n",
        "| FTTH PON | 1000/1000 Mb/s | En expansión |\n",
        "| FTTH P2P | 10000/10000 Mb/s | Premium |\n",
        "| Satelital | 100/20 Mb/s | Nicho |\n",
        "\n",
        "\n",
        "\n",
        "## Núcleo de la Red: ISPs\n",
        "\n",
        "> ISP (Internet Service Providers): Son los componentes del núcleo de la red y proporcionan interconexión entre diferentes redes.\n",
        "\n",
        "::: {style=\"width: 70vw; height: auto; overflow: visible;\"}\n",
        "```{mermaid}\n",
        "graph LR\n",
        "    T1A[\"Tier 1<br/>🌍 Cogent\"]\n",
        "    T1B[\"Tier 1<br/>🌍 Level 3\"]\n",
        "    \n",
        "    T2A[\"Tier 2<br/>🇪🇸 Movistar\"]\n",
        "    T2B[\"Tier 2<br/>🇪🇸 Vodafone\"]\n",
        "    \n",
        "    T3A[\"Tier 3<br/>🏠 Lowi\"]\n",
        "    T3B[\"Tier 3<br/>🏠 Pepephone\"]\n",
        "    \n",
        "    \n",
        "    %% Tier 1 peering\n",
        "    T1A <-.->|\"Peering Gratuito\"| T1B\n",
        "    \n",
        "    %% Tier 2 comprando de Tier 1\n",
        "    T1A -->|\"Tránsito (€€€)\"| T2A\n",
        "    T1B -->|\"Tránsito (€€€)\"| T2B\n",
        "    \n",
        "    %% Tier 3 comprando de Tier 2\n",
        "    T2A -->|\"Tránsito (€€)\"| T3A\n",
        "    T2B -->|\"Tránsito (€€)\"| T3B\n",
        "\n",
        "    T2A  <-.->|\"Peering Gratuito\"| T2B\n",
        "    \n",
        "    %% Styling\n",
        "    classDef tier1 fill:#ff6b6b,stroke:#d63031,stroke-width:3px,color:#fff\n",
        "    classDef tier2 fill:#4ecdc4,stroke:#00b894,stroke-width:2px,color:#fff\n",
        "    classDef tier3 fill:#fdcb6e,stroke:#e17055,stroke-width:2px,color:#2d3436\n",
        "    classDef users fill:#a29bfe,stroke:#6c5ce7,stroke-width:2px,color:#fff\n",
        "    \n",
        "    class T1A,T1B tier1\n",
        "    class T2A,T2B tier2\n",
        "    class T3A,T3B tier3\n",
        "    class U1,U2 users\n",
        "```\n",
        ":::\n",
        "\n",
        "::: {.columns}\n",
        "::: {.column width=\"33%\"}\n",
        "### Tier 1\n",
        "\n",
        "- Cobertura global\n",
        "- Peering gratuito\n",
        "- AT&T, Telefónica\n",
        "- 10-100 Gb/s\n",
        ":::\n",
        "\n",
        "::: {.column width=\"33%\"}\n",
        "### Tier 2\n",
        "\n",
        "- Cobertura regional/nacional\n",
        "- Pagan tránsito a Tier 1\n",
        "- Peering selectivo\n",
        ":::\n",
        "\n",
        "::: {.column width=\"33%\"}\n",
        "### Tier 3\n",
        "\n",
        "- Acceso local\n",
        "- Última milla\n",
        "- Usuarios finales\n",
        "- Sin peering\n",
        ":::\n",
        ":::\n",
        "\n",
        "\n",
        "# Modelos de Referencia\n",
        "\n",
        "## Arquitecturas por Capas\n",
        "\n",
        "::: {.columns}\n",
        "::: {.column width=\"50%\"}\n",
        "- Cada capa = responsabilidad específica\n",
        "- Servicios a capa superior\n",
        "- Usa servicios de capa inferior\n",
        "- Desarrollo independiente\n",
        ":::\n",
        "::: {.column width=\"50%\"}\n",
        "\n",
        "```{mermaid}\n",
        "graph TD\n",
        "    C1[\"🌐 Capa 1<br/>Frontend<br/><small>Javascript, HTML, CSS</small>\"]\n",
        "    C2[\"⚡ Capa 2<br/>API/Backend<br/><small>Node.js, Express</small>\"]\n",
        "    C3[\"💾 Capa 3<br/>Base de Datos<br/><small>MongoDB, PostgreSQL</small>\"]\n",
        "    \n",
        "    C1 <--> C2\n",
        "    C2 <--> C3\n",
        "    \n",
        "    classDef frontend fill:#e3f2fd,stroke:#1976d2,stroke-width:2px\n",
        "    classDef backend fill:#fff3e0,stroke:#f57c00,stroke-width:2px\n",
        "    classDef database fill:#e8f5e8,stroke:#388e3c,stroke-width:2px\n",
        "    \n",
        "    class C1 frontend\n",
        "    class C2 backend\n",
        "    class C3 database\n",
        "```\n",
        "\n",
        ":::\n",
        ":::\n",
        "\n",
        "## Encapsulación\n",
        "\n",
        "::: {.columns}\n",
        "::: {.column width=\"35%\"}\n",
        "- Cada capa añade headers\n",
        "- Datos superiores = payload\n",
        "- No modifica contenido interno\n",
        "\n",
        ":::\n",
        "::: {.column width=\"65%\"}\n",
        "\n",
        "```{mermaid}\n",
        "graph TD\n",
        "    subgraph L1 [\"⚡ Capa 1: Enlace - Header Ethernet\"]\n",
        "        subgraph L2 [\"🌐 Capa 2: Red - Header IP\"]\n",
        "            subgraph L3 [\"📦 Capa 3: Transporte - Header TCP\"]\n",
        "                subgraph L4 [\"📧 Datos Originales\"]\n",
        "                    DATA[\"Mensaje del usuario\"]\n",
        "                end\n",
        "            end\n",
        "        end\n",
        "    end\n",
        "    \n",
        "    classDef datalink fill:#f3e5f5,stroke:#7b1fa2,stroke-width:3px\n",
        "    classDef network fill:#e3f2fd,stroke:#1976d2,stroke-width:3px\n",
        "    classDef transport fill:#fff3e0,stroke:#f57c00,stroke-width:3px\n",
        "    classDef original fill:#e8f5e8,stroke:#388e3c,stroke-width:3px\n",
        "    \n",
        "    class L1 datalink\n",
        "    class L2 network\n",
        "    class L3 transport\n",
        "    class L4 original\n",
        "```\n",
        ":::\n",
        ":::\n",
        "\n",
        "## Encapsulación + Arquitectura por capas\n",
        "\n",
        "::: {.rows}\n",
        "::: {.rows height=\"30%\"}\n",
        "```{mermaid}\n",
        "---\n",
        "title: Encapsulación \n",
        "---\n",
        "graph LR\n",
        "  APP[\"📧 Email\"]\n",
        "  \n",
        "  subgraph TCP [\"TCP\"]\n",
        "      APP2[\"📧 Email\"]\n",
        "  end\n",
        "  \n",
        "  subgraph IP [\"IP\"]\n",
        "      subgraph TCP2 [\"TCP\"]\n",
        "          APP3[\"📧 Email\"]\n",
        "      end\n",
        "  end\n",
        "  \n",
        "  subgraph ETH [\"Ethernet\"]\n",
        "      subgraph IP2 [\"IP\"]\n",
        "          subgraph TCP3 [\"TCP\"]\n",
        "              APP4[\"📧 Email\"]\n",
        "          end\n",
        "      end\n",
        "  end\n",
        "  \n",
        "  APP --> TCP\n",
        "  TCP --> IP\n",
        "  IP --> ETH\n",
        "    \n",
        "  classDef app fill:#e8f5e8,stroke:#388e3c,stroke-width:2px\n",
        "  classDef transport fill:#fff3e0,stroke:#f57c00,stroke-width:2px\n",
        "  classDef network fill:#e3f2fd,stroke:#1976d2,stroke-width:2px\n",
        "  classDef datalink fill:#f3e5f5,stroke:#7b1fa2,stroke-width:2px\n",
        "  \n",
        "  class APP,APP2,APP3,APP4,APP5,APP6,APP7,APP8 app\n",
        "  class TCP,TCP2,TCP3,TCP4,TCP5,TCP6 transport\n",
        "  class IP,IP2,IP3,IP4 network\n",
        "  class ETH,ETH2 datalink\n",
        "```\n",
        ":::\n",
        "::: {.rows height=\"30%\"}\n",
        "```{mermaid}\n",
        "---\n",
        "title: Desencapsulación \n",
        "---\n",
        "graph LR\n",
        "    \n",
        "    DAPP[\"📧 Email\"]\n",
        "    \n",
        "    subgraph DTCP [\"TCP\"]\n",
        "        DAPP2[\"📧 Email\"]\n",
        "    end\n",
        "    \n",
        "    subgraph DIP [\"IP\"]\n",
        "        subgraph DTCP2 [\"TCP\"]\n",
        "            DAPP3[\"📧 Email\"]\n",
        "        end\n",
        "    end\n",
        "    \n",
        "    subgraph DETH [\"Ethernet\"]\n",
        "        subgraph DIP2 [\"IP\"]\n",
        "            subgraph DTCP3 [\"TCP\"]\n",
        "                DAPP4[\"📧 Email\"]\n",
        "            end\n",
        "        end\n",
        "    end\n",
        "    \n",
        "    DTCP --> DAPP\n",
        "    DIP --> DTCP\n",
        "    DETH --> DIP\n",
        "    \n",
        "    classDef app fill:#e8f5e8,stroke:#388e3c,stroke-width:2px\n",
        "    classDef transport fill:#fff3e0,stroke:#f57c00,stroke-width:2px\n",
        "    classDef network fill:#e3f2fd,stroke:#1976d2,stroke-width:2px\n",
        "    classDef datalink fill:#f3e5f5,stroke:#7b1fa2,stroke-width:2px\n",
        "\n",
        "    class DAPP,DAPP2,DAPP3,DAPP4,DAPP5,DAPP6,DAPP7,DAPP8 app\n",
        "    class DTCP,DTCP2,DTCP3,DTCP4,DTCP5,DTCP6 transport\n",
        "    class DIP,DIP2,DIP3,DIP4 network\n",
        "    class DETH,DETH2 datalink\n",
        "```\n",
        ":::\n",
        ":::\n",
        "\n",
        "## Modelos OSI vs TCP/IP\n",
        "\n",
        "::: {.columns}\n",
        "::: {.column width=\"50%\"}\n",
        "\n",
        "::: {style=\"width: 35vw; height auto; overflow: visible;\"}\n",
        "![](resources/tcp_osi.svg)\n",
        ":::\n",
        ":::\n",
        "\n",
        "::: {.column width=\"50%\"}\n",
        "\n",
        "- **OSI**: 7 capas, modelo teórico\n",
        "- **TCP/IP**: 4 capas, usado en Internet\n",
        ":::\n",
        ":::\n",
        "\n",
        "> ⚠️ **Nota**: TCP/IP no es un protocolo, hace referencia a una pila de protocolos. Además, no tiene porque utilizar necesariamente TCP, podría ser UDP.\n",
        "\n",
        ":::{.notes}\n",
        "TCP/IP es superior a OSI porque es simple, práctico y probado. Mientras OSI tiene 7 capas teóricas diseñadas en comités académicos, TCP/IP usa solo 4 capas que realmente se necesitan y ha funcionado en Internet durante más de 50 años. TCP/IP es más eficiente (menos overhead), más flexible (se adapta fácilmente), y tiene adopción masiva con ecosistemas completos de hardware y software. OSI llegó tarde al mercado cuando TCP/IP ya dominaba, y sus capas extra (como Sesión y Presentación) añaden complejidad innecesaria para la mayoría de aplicaciones reales. En resumen: OSI es el modelo perfecto para estudiar redes, pero TCP/IP es lo que realmente mueve Internet.\n",
        "\n",
        "- Rigid Foundation: X11's network-based protocol became unchangeable due to backward compatibility, preventing modern optimizations\n",
        "- Performance Bottlenecks: Every graphics operation had to go through multiple layers (app → toolkit → X11 → server), creating unnecessary overhead for local applications\n",
        "- Hardware Evolution Mismatch: When GPUs emerged, X11's software-rendering architecture couldn't efficiently utilize new hardware acceleration\n",
        "- Extension Hell: Adding modern features required bolt-on extensions (Composite, GLX, XRender) rather than clean integration, creating complexity\n",
        "- Layer Lock-In: Applications built on X11 assumptions were hard to migrate to better architectures, requiring complete rewrites (hence Wayland's slow adoption)\n",
        ":::\n",
        "\n",
        "\n",
        "## Nivel de Aplicación\n",
        "\n",
        "> Es el nivel en que desarrollamos aplicaciones.\n",
        "\n",
        "::: {.columns}\n",
        "::: {.column width=\"50%\"}\n",
        "### OSI (Capas 7, 6, 5)\n",
        "\n",
        "- **Aplicación**: HTTP, FTP, DNS\n",
        "- **Presentación**: Cifrado, compresión\n",
        "- **Sesión**: Control de diálogos\n",
        ":::\n",
        "\n",
        "::: {.column width=\"50%\"}\n",
        "### TCP/IP\n",
        "\n",
        "- Una sola capa integrada\n",
        "- Protocolos: HTTP/HTTPS, SMTP, FTP, DNS\n",
        "- Más práctico\n",
        ":::\n",
        ":::\n",
        "\n",
        "\n",
        "\n",
        "## Nivel de Transporte\n",
        "\n",
        "> Gestiona la comunicación extremo a extremo entre aplicaciones.\n",
        "\n",
        "### Capa 4 (ambos modelos)\n",
        "\n",
        "::: {.columns}\n",
        "::: {.column width=\"50%\"}\n",
        "**TCP**\n",
        "\n",
        "- Comunicación confiable\n",
        "- Control de flujo\n",
        "- Entrega ordenada\n",
        "- Corrección de errores\n",
        ":::\n",
        "\n",
        "::: {.column width=\"50%\"}\n",
        "**UDP**\n",
        "\n",
        "- Comunicación rápida\n",
        "- Sin garantías\n",
        "- Ideal para tiempo real\n",
        "- Menor overhead\n",
        ":::\n",
        ":::\n",
        "\n",
        "\n",
        "\n",
        "## Nivel de Red/Internet\n",
        "\n",
        "> Se encarga de encontrar el mejor camino para enviar datos a través de múltiples redes. En otras palabras, se encarga del **enrutamiento** de paquetes.\n",
        "\n",
        "### Capa 3 OSI / Capa Internet TCP/IP\n",
        "\n",
        "**Protocolos**:\n",
        "\n",
        "- IP: Protocolo principal\n",
        "- ICMP: Control y errores\n",
        "- ARP: Resolución de direcciones\n",
        "- OSPF, BGP: Protocolos de enrutamiento\n",
        "\n",
        "::: {.callout-note}\n",
        "# Ejercicio\n",
        "Prueba a ejecutar `ping www.google.es` en tu terminal. ¿Qué ves?.\n",
        ":::\n",
        "\n",
        "## Nivel de Acceso Físico\n",
        "\n",
        "> Controla cómo los datos se transmiten físicamente a través del medio de comunicación.\n",
        "\n",
        "::: {.columns}\n",
        "::: {.column width=\"50%\"}\n",
        "### OSI (Capas 2 y 1)\n",
        "\n",
        "- **Enlace**: Control de errores, MAC\n",
        "- **Física**: Señales, voltajes\n",
        ":::\n",
        "\n",
        "::: {.column width=\"50%\"}\n",
        "### TCP/IP\n",
        "\n",
        "- Capa de Acceso a Red\n",
        "- Combina ambas funciones\n",
        "- Ethernet, WiFi, etc.\n",
        ":::\n",
        ":::\n",
        "\n",
        "\n",
        "\n",
        "# Rendimiento en Redes\n",
        "\n",
        "## Métricas Principales\n",
        "\n",
        "::: {.columns}\n",
        "::: {.column width=\"50%\"}\n",
        "### Latencia\n",
        "\n",
        "- Tiempo que tarda un paquete en llegar a su destino.\n",
        "- \"Velocidad del vehículo\"\n",
        "- Medida en ms\n",
        ":::\n",
        "\n",
        "::: {.column width=\"50%\"}\n",
        "### Throughput\n",
        "\n",
        "- Datos enviados por cantidad de tiempo.\n",
        "- \"Número de carriles\"\n",
        "- Medido en Mb/s o Gb/s\n",
        ":::\n",
        ":::\n",
        "\n",
        "> ⚠️ **Nota**: 1 MB/s = 8 Mb/s\n",
        "\n",
        "\n",
        "## Throughput vs Bandwidth\n",
        "\n",
        "\n",
        "::: {.columns}\n",
        "::: {.column width=\"50%\"}\n",
        "### Bandwidth\n",
        "\n",
        "- Capacidad **máxima teórica**\n",
        "- Límite físico del canal\n",
        "- Condiciones ideales\n",
        ":::\n",
        "\n",
        "::: {.column width=\"50%\"}\n",
        "### Throughput\n",
        "\n",
        "- Transferencia **real**\n",
        "- Limitado por el componente más lento\n",
        "- Condiciones reales\n",
        ":::\n",
        ":::\n",
        "\n",
        "\n",
        "## Latencia vs Throughput\n",
        "\n",
        "Comparativa del efecto de la latencia y throughput en el tiempo para enviar una cantidad de datos. \n",
        "\n",
        ":::{.ojsinteractive}\n",
        ":::{.ojscontrols}\n",
        "```{ojs}\n",
        "// Sliders agrupados en un formulario\n",
        "viewof settings = Inputs.form({\n",
        "  \"Tamaño total\": Inputs.range([50, 5000], {value: 200, step: 10, label: \"Tamaño total\"},),\n",
        "  \"Latencia A\": Inputs.range([1, 50], {value: 1, step: 0.1, label: \"Latencia (A)\"}),\n",
        "  \"Throughput A\": Inputs.range([1, 50], {value: 10, step: 1, label:\"Throughput (A)\"}),\n",
        "  \"Latencia B\": Inputs.range([1, 50], {value: 2, step: 0.1, label:\"Latencia (B)\"}),\n",
        "  \"Throughput B\": Inputs.range([1, 50], {value: 20, step: 1, label:\"Throughput B\"})\n",
        "})\n",
        "\n",
        "// Extraemos variables del formulario\n",
        "totalData = settings[\"Tamaño total\"]\n",
        "latencyA = settings[\"Latencia A\"]\n",
        "throughputA = settings[\"Throughput A\"]\n",
        "latencyB = settings[\"Latencia B\"]\n",
        "throughputB = settings[\"Throughput B\"]\n",
        "```\n",
        ":::\n",
        "\n",
        ":::{.ojsplot}\n",
        "```{ojs}\n",
        "// Función progreso\n",
        "function progress(t, latency, throughput, total) {\n",
        "  if (t < latency) return 0;\n",
        "  return Math.min(100, ((t - latency) * throughput / total) * 100);\n",
        "}\n",
        "\n",
        "// Reloj animado\n",
        "time = {\n",
        "  let t0 = Date.now();\n",
        "  while (true) {\n",
        "    yield (Date.now() - t0) / 100; // en decimas de segundo\n",
        "    await Promises.tick(50);\n",
        "  }\n",
        "}\n",
        "\n",
        "// Tiempo máximo\n",
        "maxTime = Math.max(latencyA + totalData/throughputA, latencyB + totalData/throughputB)\n",
        "\n",
        "// Progresos\n",
        "progA = progress(time % maxTime, latencyA, throughputA, totalData)\n",
        "progB = progress(time % maxTime, latencyB, throughputB, totalData)\n",
        "\n",
        "// Gráfico con Plot\n",
        "Plot.plot({\n",
        "  y: {domain: [0, 100], label: \"% completado\"},\n",
        "  x: {label: \"Tiempo (s)\"},\n",
        "  color: {legend: true, domain: [\"A\", \"B\"], range: [\"blue\", \"red\"]},\n",
        "  marks: [\n",
        "    Plot.line(d3.range(0, maxTime, 0.1).map(t => ({t, y: progress(t, latencyA, throughputA, totalData), series: \"A\"})), {x: \"t\", y: \"y\", stroke: \"series\"}),\n",
        "    Plot.line(d3.range(0, maxTime, 0.1).map(t => ({t, y: progress(t, latencyB, throughputB, totalData), series: \"B\"})), {x: \"t\", y: \"y\", stroke: \"series\"}),\n",
        "    Plot.dot([{t: time % maxTime, y: progA, series: \"A\"}], {x: \"t\", y: \"y\", fill: \"series\", r: 5}),\n",
        "    Plot.dot([{t: time % maxTime, y: progB, series: \"B\"}], {x: \"t\", y: \"y\", fill: \"series\", r: 5})\n",
        "  ]\n",
        "})\n",
        "```\n",
        ":::\n",
        ":::\n",
        "\n",
        "\n",
        "\n",
        "## Componentes de la Latencia\n",
        "\n",
        "$d_{total} = \\textcolor{red}{d_{proc}} + \\textcolor{blue}{d_{queue}} + \\textcolor{green}{d_{prop}} + \\textcolor{orange}{d_{trans}}$\n",
        "\n",
        "- [dproc]{style=\"color: red;\"}: Procesamiento en router (microsegundos)\n",
        "- [dqueue]{style=\"color: blue;\"}: Espera en buffer (variable con tráfico)\n",
        "- [dprop]{style=\"color: green;\"}: Propagación por el medio (d/s)\n",
        "- [dtrans]{style=\"color: orange;\"}: Transmisión de datos (L/R)\n",
        "\n",
        "\n",
        "## RTT\n",
        "\n",
        "> RTT (Round trip time): Tiempo total que tarda un paquete en ir desde el origen hasta el destino y volver de vuelta (ida + vuelta).\n",
        "\n",
        "- La latencia no tiene porque ser simétrica.\n",
        "- Generalmente la descarga es más rápida que la subida.\n",
        "- Por lo tanto, el RTT es un valor muy importante en aplicaciones interactivas.\n",
        "\n",
        "\n",
        "## Comparación: Fibra vs 5G\n",
        "\n",
        "| Factor | Fibra Óptica | 5G |\n",
        "|--------|--------------|-----|\n",
        "| **Propagación** | 67% velocidad luz | 100% velocidad luz |\n",
        "| **Procesamiento** | ~0.1ms/salto | ~4ms (estación radio) |\n",
        "| **Cola** | Baja congestión | Alta congestión |\n",
        "| **Transmisión** | Hasta 10 Gb/s | < 1 Gb/s |\n",
        "\n",
        "**Resultado**: Fibra generalmente más rápida y estable\n",
        "\n",
        "\n",
        "\n",
        "## Jitter: Variabilidad de Latencia\n",
        "\n",
        "> Jitter: Variación en el tiempo de llegada de los paquetes que causa inconsistencia en la comunicación.\n",
        "\n",
        "### Ejemplo comparativo\n",
        "\n",
        "::: {.columns}\n",
        "::: {.column width=\"50%\"}\n",
        "**Escenario 1** (Bajo jitter):\n",
        "\n",
        "- Paquetes: 50, 52, 48, 51 ms\n",
        "- Promedio: 50.25 ms\n",
        "- Variación: 1.48 ms ✅\n",
        ":::\n",
        "\n",
        "::: {.column width=\"50%\"}\n",
        "**Escenario 2** (Alto jitter):\n",
        "\n",
        "- Paquetes: 28, 68, 43, 62 ms\n",
        "- Promedio: 50.25 ms\n",
        "- Variación: 15.82 ms ❌\n",
        ":::\n",
        ":::\n",
        "\n",
        "**Impacto**: Voz entrecortada, saltos en video, degradación en juegos\n",
        "\n",
        "## Requisitos para Videojuegos\n",
        "\n",
        "### RTT máximo tolerado\n",
        "\n",
        "| Género | Tolerancia | Ejemplo |\n",
        "|--------|------------|---------|\n",
        "| **Fighting** | 16-50ms | Street Fighter |\n",
        "| **FPS Competitivo** | 20-50ms | Counter-Strike |\n",
        "| **Racing** | 50-100ms | Gran Turismo |\n",
        "| **RTS** | 100-200ms | StarCraft |\n",
        "| **MMORPG** | Variable | World of Warcraft |\n",
        "| **Turn-based** | 500ms+ | Civilization |\n",
        "\n",
        "\n",
        "\n",
        "## Pérdida de Paquetes\n",
        "\n",
        "### Causas principales\n",
        "\n",
        "- **Congestión**: Buffers llenos en routers\n",
        "- **Corrupción**: Interferencias electromagnéticas\n",
        "- **Radiación cósmica**: ~1 error/256MB/día\n",
        "\n",
        "\n",
        "### Soluciones\n",
        "- Protocolos de capas superiores (TCP)\n",
        "- Retransmisión automática\n",
        "- Códigos de corrección de errores\n",
        "- Interpolar la información\n",
        "\n",
        "\n",
        "## Resumen\n",
        "::: {.incremental}\n",
        "- Internet es un **sistema distribuido y descentralizado**\n",
        "- Evolución desde 4 hosts (1969) a >100B dispositivos (2025)\n",
        "- **Infraestructura jerárquica**: PAN → LAN → MAN → WAN → Internet\n",
        "- **Modelos de capas**: OSI (teórico) vs TCP/IP (práctico)\n",
        "- **Rendimiento**: Balance entre latencia y throughput\n",
        "- **Aplicaciones críticas**: Videojuegos requieren <50ms para competitivo\n",
        ":::"
      ],
      "id": "25ad3e95"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "/Users/rubenrodriguez/miniconda3/envs/jer/share/jupyter/kernels/python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}